Training NN architecture =  DENSE-NET-121
/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/_reduction.py:43: UserWarning: size_average and reduce args will be deprecated, please use reduction='mean' instead.
  warnings.warn(warning.format(ret))
began  validation
began test
Traceback (most recent call last):
  File "Main.py", line 82, in <module>
    main()
  File "Main.py", line 13, in main
    runTrain()
  File "Main.py", line 55, in runTrain
    ChexnetTrainer.train(pathDirData, pathFileTrain, pathFileVal, nnArchitecture, nnIsTrained, nnClassCount, trBatchSize, trMaxEpoch, imgtransResize, imgtransCrop, timestampLaunch, None)
  File "/media/luckie/vol4/paper_with_code/chexnet-master/ChexnetTrainer.py", line 98, in train
    ChexnetTrainer.epochTest(model,pathDirData)
  File "/media/luckie/vol4/paper_with_code/chexnet-master/ChexnetTrainer.py", line 212, in epochTest
    out = model(torch.autograd.Variable(input.view(-1, c, h, w).cuda()))
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 162, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 85, in parallel_apply
    output.reraise()
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/_utils.py", line 369, in reraise
    raise self.exc_type(msg)
RuntimeError: Caught RuntimeError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 60, in _worker
    output = module(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/media/luckie/vol4/paper_with_code/chexnet-master/DensenetModels.py", line 27, in forward
    x = self.densenet121(x)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torchvision/models/densenet.py", line 155, in forward
    features = self.features(x)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torchvision/models/densenet.py", line 74, in forward
    new_features = layer(*features)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torchvision/models/densenet.py", line 50, in forward
    bottleneck_output = bn_function(*prev_features)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torchvision/models/densenet.py", line 23, in bn_function
    bottleneck_output = conv(relu(norm(concated_features)))
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 547, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 81, in forward
    exponential_average_factor, self.eps)
  File "/home/luckie/anaconda2/envs/py37/lib/python3.7/site-packages/torch/nn/functional.py", line 1656, in batch_norm
    training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: CUDA out of memory. Tried to allocate